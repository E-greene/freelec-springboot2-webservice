buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.jojoldu.book'
version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    //롬복
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    //JPA, spring data jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    //h2의존성
    runtimeOnly('com.h2database:h2')

    //mustache
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    //spring securiry
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

    //spring-session-jdbc
    implementation('org.springframework.session:spring-session-jdbc')

    //spring-security-test
    implementation('org.springframework.security:spring-security-test')

    //MariaDB 드라이버 등록
    implementation('org.mariadb.jdbc:mariadb-java-client')
}

//test {
//    useJUnitPlatform()
//}